/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mysqldbcomparison;

/**
 *
 * @author rajib
 */

import com.mysql.jdbc.jdbc2.optional.*;
import java.sql.*;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;

public class MySQLDatabaseComparisonJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MySQLDatabaseComparisonJFrame
     */
    public MySQLDatabaseComparisonJFrame() {
        initComponents();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_MySQLDBComparison = new javax.swing.JPanel();
        jLabel_Host_Name = new javax.swing.JLabel();
        jTextField_Host_Name = new javax.swing.JTextField();
        jLabel_Port = new javax.swing.JLabel();
        jTextField_Port = new javax.swing.JTextField();
        jLabel_User_Name = new javax.swing.JLabel();
        jTextField_User_Name = new javax.swing.JTextField();
        jLabel_Password = new javax.swing.JLabel();
        jPasswordField_DB_Password = new javax.swing.JPasswordField();
        jLabel_Source_DB = new javax.swing.JLabel();
        jTextField_Source_DB = new javax.swing.JTextField();
        jLabel_Destination_DB = new javax.swing.JLabel();
        jTextField_Destination_DB = new javax.swing.JTextField();
        jButton_Show_Object_Count = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Object_Count = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel_MySQLDBComparison.setBackground(new java.awt.Color(0, 51, 51));
        jPanel_MySQLDBComparison.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true), "MySQL Database Comparison Tool", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier 10 Pitch", 1, 24), java.awt.Color.white)); // NOI18N
        jPanel_MySQLDBComparison.setForeground(new java.awt.Color(255, 255, 255));

        jLabel_Host_Name.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Host_Name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_Host_Name.setText("Host Name ");

        jLabel_Port.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Port.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_Port.setText("Port");

        jLabel_User_Name.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_User_Name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_User_Name.setText("User Name");

        jLabel_Password.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Password.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_Password.setText("Password");

        jLabel_Source_DB.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Source_DB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_Source_DB.setText("Source DB");

        jLabel_Destination_DB.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Destination_DB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_Destination_DB.setText("Destination DB");

        jButton_Show_Object_Count.setText("Show Object Count");
        jButton_Show_Object_Count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Show_Object_CountActionPerformed(evt);
            }
        });

        jTable_Object_Count.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DB", "Object Type", "Count"
            }
        ));
        jScrollPane1.setViewportView(jTable_Object_Count);

        javax.swing.GroupLayout jPanel_MySQLDBComparisonLayout = new javax.swing.GroupLayout(jPanel_MySQLDBComparison);
        jPanel_MySQLDBComparison.setLayout(jPanel_MySQLDBComparisonLayout);
        jPanel_MySQLDBComparisonLayout.setHorizontalGroup(
            jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MySQLDBComparisonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_Host_Name, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Port, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_User_Name, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Password, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Source_DB, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Destination_DB, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_Host_Name)
                    .addComponent(jTextField_Port)
                    .addComponent(jTextField_User_Name)
                    .addComponent(jPasswordField_DB_Password)
                    .addComponent(jTextField_Source_DB)
                    .addComponent(jTextField_Destination_DB, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_Show_Object_Count, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(915, Short.MAX_VALUE))
        );

        jPanel_MySQLDBComparisonLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel_Destination_DB, jLabel_Host_Name, jLabel_Password, jLabel_Port, jLabel_Source_DB, jLabel_User_Name});

        jPanel_MySQLDBComparisonLayout.setVerticalGroup(
            jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MySQLDBComparisonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Host_Name)
                    .addComponent(jTextField_Host_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Show_Object_Count))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel_MySQLDBComparisonLayout.createSequentialGroup()
                        .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_Port)
                            .addComponent(jTextField_Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_User_Name)
                            .addComponent(jTextField_User_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_Password)
                            .addComponent(jPasswordField_DB_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_Source_DB)
                            .addComponent(jTextField_Source_DB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_MySQLDBComparisonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_Destination_DB)
                            .addComponent(jTextField_Destination_DB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(705, Short.MAX_VALUE))
        );

        jPanel_MySQLDBComparisonLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel_Destination_DB, jLabel_Host_Name, jLabel_Password, jLabel_Port, jLabel_Source_DB, jLabel_User_Name});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_MySQLDBComparison, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_MySQLDBComparison, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1610, 980));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean hasUserFilledAllRequiredFieldsForDatabaseConnection(){
        
        JFrame frame = new JFrame("JOptionPane showMessageDialog required data");
        
        if(jTextField_Host_Name.getText().isEmpty()){
            JOptionPane.showMessageDialog(frame, "Host name is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            
            return false;
        }else if(jTextField_Port.getText().isEmpty()){
            JOptionPane.showMessageDialog(frame, "Port number is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            
            return false;
        }else if(jTextField_User_Name.getText().isEmpty()){
            JOptionPane.showMessageDialog(frame, "User is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            
            return false;
        }else if(new String(jPasswordField_DB_Password.getPassword()).isEmpty()){
            JOptionPane.showMessageDialog(frame, "Password is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            
            return false;
        }
        
        return true;
    }
    
    private boolean hasUserProvidedSourceAndDestinationDatabase(){
        JFrame frame = new JFrame("JOptionPane showMessageDialog required data");
        
        if(jTextField_Source_DB.getText().isEmpty()){
            JOptionPane.showMessageDialog(frame, "Source database is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            
            return false;
        }else if(jTextField_Destination_DB.getText().isEmpty()){
            JOptionPane.showMessageDialog(frame, "Destination Database is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            
            return false;
        }
        
        return true;
    }
    
    private Connection getDatabaseConnection(){
        if(!hasUserFilledAllRequiredFieldsForDatabaseConnection()){
            return null;
        }
        
        MysqlDataSource dataSource = new MysqlDataSource();
        dataSource.setServerName(jTextField_Host_Name.getText()); //38.127.68.61
        dataSource.setPort(Integer.parseInt(jTextField_Port.getText()));
        dataSource.setUser(jTextField_User_Name.getText());

        char[] pwd = jPasswordField_DB_Password.getPassword();

        dataSource.setPassword(new String(pwd));
        
        try {
            return dataSource.getConnection();
        } catch (SQLException ex) {
            //Logger.getLogger(MySQLAdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
            JFrame frame = new JFrame("JOptionPane showMessageDialog example");
            JOptionPane.showMessageDialog(frame, "Error: " + ex.getMessage(), "Error Message", JOptionPane.ERROR_MESSAGE);
        }

        return null;
    }
    
    private void jButton_Show_Object_CountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Show_Object_CountActionPerformed
        try{
            Connection conn = getDatabaseConnection();
            
            if(conn != null){
                if(!hasUserProvidedSourceAndDestinationDatabase())
                    return;
                
                Statement stmt = conn.createStatement();

                String sourceDatabase = jTextField_Source_DB.getText();
                String destinationDatabase = jTextField_Destination_DB.getText();

                String query = "SELECT * FROM (";
                query = query + " SELECT TABLE_SCHEMA AS 'Database', 'Table' AS 'Object' , COUNT(*) AS 'Number of Object'";
                query = query + " FROM INFORMATION_SCHEMA.TABLES";
                query = query + " WHERE TABLE_SCHEMA IN ('" + sourceDatabase + "', '" + destinationDatabase +"')";
                query = query + " GROUP BY 1";
                query = query + " UNION ALL";
                query = query + " SELECT ROUTINE_SCHEMA AS 'Database', 'Routine' AS 'Object', COUNT(*) AS 'Number of Object'";
                query = query + " FROM INFORMATION_SCHEMA.ROUTINES";
                query = query + " WHERE ROUTINE_SCHEMA IN ('" + sourceDatabase + "', '" + destinationDatabase +"')";
                query = query + " GROUP BY 1";
                query = query + " UNION ALL";
                query = query + " SELECT CONSTRAINT_SCHEMA AS 'Database', CONSTRAINT_TYPE AS 'Object', COUNT(*) AS 'Number of Object'";
                query = query + " FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS";
                query = query + " WHERE CONSTRAINT_SCHEMA IN ('" + sourceDatabase + "', '" + destinationDatabase +"')";
                query = query + " GROUP BY 1, 2";
                query = query + " ) a";
                query = query + " ORDER BY 2, 1;";

                ResultSet rs = stmt.executeQuery(query);

                ResultSetMetaData rsmt = rs.getMetaData();

                int columnCount = rsmt.getColumnCount();

                DefaultTableModel model = (DefaultTableModel)jTable_Object_Count.getModel();

                int rowCount = model.getRowCount();

                for (int i = rowCount - 1; i >= 0; i--) {
                    model.removeRow(i);
                }

                Vector<String> row;

                while(rs.next()){
                    row = new Vector<String>(columnCount);
                    for(int i = 1; i <= columnCount; i++){
                        row.add(rs.getString(i));
                    }

                    model.addRow(row);
                }

                rs.close();
                stmt.close();
                conn.close();
            }
        }catch(Exception ex){
            JFrame frame = new JFrame("JOptionPane showMessageDialog example");
            JOptionPane.showMessageDialog(frame, "Error: " + ex.getMessage(), "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_Show_Object_CountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MySQLDatabaseComparisonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MySQLDatabaseComparisonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MySQLDatabaseComparisonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MySQLDatabaseComparisonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MySQLDatabaseComparisonJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Show_Object_Count;
    private javax.swing.JLabel jLabel_Destination_DB;
    private javax.swing.JLabel jLabel_Host_Name;
    private javax.swing.JLabel jLabel_Password;
    private javax.swing.JLabel jLabel_Port;
    private javax.swing.JLabel jLabel_Source_DB;
    private javax.swing.JLabel jLabel_User_Name;
    private javax.swing.JPanel jPanel_MySQLDBComparison;
    private javax.swing.JPasswordField jPasswordField_DB_Password;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Object_Count;
    private javax.swing.JTextField jTextField_Destination_DB;
    private javax.swing.JTextField jTextField_Host_Name;
    private javax.swing.JTextField jTextField_Port;
    private javax.swing.JTextField jTextField_Source_DB;
    private javax.swing.JTextField jTextField_User_Name;
    // End of variables declaration//GEN-END:variables
}
